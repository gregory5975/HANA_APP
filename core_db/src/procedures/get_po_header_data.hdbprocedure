PROCEDURE "get_po_header_data" ( 
	OUT EX_TOP_3_EMP_PO_COMBINED_CNT TABLE (
			FULLNAME NVARCHAR(256),
			CREATE_CNT INTEGER,
			CHANGE_CNT INTEGER,
			COMBINED_CNT INTEGER )
	)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   READS SQL DATA AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   
   po_create_cnt = select count(*) as CREATE_CNT, "HISTORY.CREATEDBY.EMPLOYEEID" AS EID
		from "PO.Header" where PURCHASEORDERID in (
						select PURCHASEORDERID
							from "PO.Item" where "PRODUCT.PRODUCTID" is not null)
	group by "HISTORY.CREATEDBY.EMPLOYEEID";
	
   po_change_cnt = select count(*) as CHANGE_CNT, "HISTORY.CHANGEDBY.EMPLOYEEID" AS EID
		from "PO.Header" where PURCHASEORDERID in (
						select PURCHASEORDERID
							from "PO.Item" where "PRODUCT.PRODUCTID" is not null)
	group by "HISTORY.CHANGEDBY.EMPLOYEEID";
	
	EX_TOP_3_EMP_PO_COMBINED_CNT = SELECT "get_full_name"("NAME.FIRST", "NAME.MIDDLE", "NAME.LAST") as FULLNAME, 
										crcnt.CREATE_CNT, chcnt.CHANGE_CNT,
										crcnt.CREATE_CNT + chcnt.CHANGE_CNT AS COMBINED_CNT
										FROM "MD.Employees" AS emp
										LEFT OUTER JOIN :PO_CREATE_CNT AS crcnt
											ON emp.EMPLOYEEID = crcnt.EID
										LEFT OUTER JOIN :PO_CHANGE_CNT AS chcnt
											ON emp.EMPLOYEEID = chcnt.EID
										ORDER BY COMBINED_CNT DESC LIMIT 3;
END